services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: aiagent-postgres-dev
    environment:
      POSTGRES_USER: aiagent
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aiagent_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiagent"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aiagent-dev-network

  # Redis (Development)
  redis:
    image: redis:7-alpine
    container_name: aiagent-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aiagent-dev-network

  # pgAdmin - PostgreSQL Management UI (Development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aiagent-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aiagent.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin-pgpass:/tmp/pgpassfile:ro
    networks:
      - aiagent-dev-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_dev_data:

networks:
  aiagent-dev-network:
    driver: bridge
