"""Add Celery integration to task_executions

Revision ID: 7d63149cb5f5
Revises: c0b7d0e366e7
Create Date: 2025-10-24 03:22:23.991462

"""
from alembic import op
import sqlalchemy as sa
from app.database.base import JSONB, ARRAY, INET
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d63149cb5f5'
down_revision = 'c0b7d0e366e7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_session', table_name='audit_logs')
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_user', table_name='audit_logs')
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_reports_created_at', table_name='reports')
    op.create_index('idx_reports_created_at', 'reports', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=ARRAY(sa.String),
               existing_nullable=True)
    op.add_column('task_executions', sa.Column('celery_task_id', sa.String(length=255), nullable=True))
    op.add_column('task_executions', sa.Column('worker_hostname', sa.String(length=255), nullable=True))
    op.add_column('task_executions', sa.Column('retry_count', sa.Integer(), nullable=True))
    op.add_column('task_executions', sa.Column('queued_at', sa.DateTime(timezone=True), nullable=True))
    op.create_index('idx_task_executions_celery_task', 'task_executions', ['celery_task_id'], unique=False)
    op.create_index(op.f('ix_task_executions_celery_task_id'), 'task_executions', ['celery_task_id'], unique=False)

    # Update status constraint to include 'queued'
    op.drop_constraint('chk_task_execution_status', 'task_executions', type_='check')
    op.create_check_constraint(
        'chk_task_execution_status',
        'task_executions',
        "status IN ('pending', 'queued', 'running', 'completed', 'failed', 'cancelled')"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert status constraint (remove 'queued')
    op.drop_constraint('chk_task_execution_status', 'task_executions', type_='check')
    op.create_check_constraint(
        'chk_task_execution_status',
        'task_executions',
        "status IN ('pending', 'running', 'completed', 'failed', 'cancelled')"
    )

    op.drop_index(op.f('ix_task_executions_celery_task_id'), table_name='task_executions')
    op.drop_index('idx_task_executions_celery_task', table_name='task_executions')
    op.drop_column('task_executions', 'queued_at')
    op.drop_column('task_executions', 'retry_count')
    op.drop_column('task_executions', 'worker_hostname')
    op.drop_column('task_executions', 'celery_task_id')
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=ARRAY(sa.String),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
    op.drop_index('idx_reports_created_at', table_name='reports', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_reports_created_at', 'reports', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_user', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_session', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_created_at', 'audit_logs', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', sa.text('created_at DESC')], unique=False)
    # ### end Alembic commands ###
