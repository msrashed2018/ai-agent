"""

Revision ID: 522ded944960
Revises: 7d63149cb5f5
Create Date: 2025-10-25 03:11:30.474277

"""
from alembic import op
import sqlalchemy as sa
from app.database.base import JSONB, ARRAY, INET
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '522ded944960'
down_revision = '7d63149cb5f5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('prompt_template', sa.Text(), nullable=False),
    sa.Column('template_variables_schema', JSONB(), nullable=True),
    sa.Column('allowed_tools', ARRAY(sa.String), server_default='{}', nullable=False),
    sa.Column('disallowed_tools', ARRAY(sa.String), server_default='{}', nullable=True),
    sa.Column('sdk_options', JSONB(), server_default='{}', nullable=True),
    sa.Column('generate_report', sa.Boolean(), nullable=True),
    sa.Column('report_format', sa.String(length=50), nullable=True),
    sa.Column('tags', ARRAY(sa.String), server_default='{}', nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_templates'))
    )
    op.create_index('idx_task_templates_category', 'task_templates', ['category', 'is_active'], unique=False)
    op.create_index('idx_task_templates_tags', 'task_templates', ['tags'], unique=False, postgresql_using='gin')
    op.create_index('idx_task_templates_usage', 'task_templates', ['usage_count'], unique=False, postgresql_where='is_active = true')
    op.create_index(op.f('ix_task_templates_category'), 'task_templates', ['category'], unique=False)
    op.create_index(op.f('ix_task_templates_created_at'), 'task_templates', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_templates_name'), 'task_templates', ['name'], unique=True)
    op.create_table('tool_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('allowed_tools', ARRAY(sa.String), server_default='{}', nullable=False),
    sa.Column('disallowed_tools', ARRAY(sa.String), server_default='{}', nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tool_groups_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tool_groups'))
    )
    op.create_index('idx_tool_groups_name', 'tool_groups', ['name'], unique=False, postgresql_ops={'name': 'varchar_pattern_ops'})
    op.create_index('idx_tool_groups_user', 'tool_groups', ['user_id', 'is_deleted'], unique=False)
    op.create_index(op.f('ix_tool_groups_created_at'), 'tool_groups', ['created_at'], unique=False)
    op.create_index(op.f('ix_tool_groups_is_deleted'), 'tool_groups', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tool_groups_name'), 'tool_groups', ['name'], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_session', table_name='audit_logs')
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_user', table_name='audit_logs')
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_reports_created_at', table_name='reports')
    op.create_index('idx_reports_created_at', 'reports', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=ARRAY(sa.String),
               existing_nullable=True)
    op.add_column('tasks', sa.Column('tool_group_id', sa.UUID(), nullable=True))
    op.create_foreign_key(op.f('fk_tasks_tool_group_id_tool_groups'), 'tasks', 'tool_groups', ['tool_group_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_tasks_tool_group_id_tool_groups'), 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'tool_group_id')
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=ARRAY(sa.String),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
    op.drop_index('idx_reports_created_at', table_name='reports', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_reports_created_at', 'reports', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_user', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_session', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_created_at', 'audit_logs', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', sa.text('created_at DESC')], unique=False)
    op.drop_index(op.f('ix_tool_groups_name'), table_name='tool_groups')
    op.drop_index(op.f('ix_tool_groups_is_deleted'), table_name='tool_groups')
    op.drop_index(op.f('ix_tool_groups_created_at'), table_name='tool_groups')
    op.drop_index('idx_tool_groups_user', table_name='tool_groups')
    op.drop_index('idx_tool_groups_name', table_name='tool_groups', postgresql_ops={'name': 'varchar_pattern_ops'})
    op.drop_table('tool_groups')
    op.drop_index(op.f('ix_task_templates_name'), table_name='task_templates')
    op.drop_index(op.f('ix_task_templates_created_at'), table_name='task_templates')
    op.drop_index(op.f('ix_task_templates_category'), table_name='task_templates')
    op.drop_index('idx_task_templates_usage', table_name='task_templates', postgresql_where='is_active = true')
    op.drop_index('idx_task_templates_tags', table_name='task_templates', postgresql_using='gin')
    op.drop_index('idx_task_templates_category', table_name='task_templates')
    op.drop_table('task_templates')
    # ### end Alembic commands ###
