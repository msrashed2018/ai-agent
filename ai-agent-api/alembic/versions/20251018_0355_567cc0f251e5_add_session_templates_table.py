"""Add session_templates table

Revision ID: 567cc0f251e5
Revises: 972fc63ffb69
Create Date: 2025-10-18 03:55:59.248683

"""
from alembic import op
import sqlalchemy as sa
from app.database.base import JSONB, ARRAY, INET


# revision identifiers, used by Alembic.
revision = '567cc0f251e5'
down_revision = '972fc63ffb69'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('session_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=True),
    sa.Column('working_directory', sa.String(length=500), nullable=True),
    sa.Column('allowed_tools', ARRAY(sa.String), nullable=True),
    sa.Column('sdk_options', JSONB(), nullable=True),
    sa.Column('mcp_server_ids', ARRAY(sa.String), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_organization_shared', sa.Boolean(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('tags', ARRAY(sa.String), nullable=True),
    sa.Column('template_metadata', JSONB(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("category IN ('development', 'security', 'production', 'debugging', 'performance', 'custom') OR category IS NULL", name=op.f('ck_session_templates_chk_template_category')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_session_templates_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_session_templates'))
    )
    op.create_index('idx_templates_category', 'session_templates', ['category'], unique=False, postgresql_where='deleted_at IS NULL')
    op.create_index('idx_templates_name', 'session_templates', ['name'], unique=False, postgresql_ops={'name': 'varchar_pattern_ops'})
    op.create_index('idx_templates_public', 'session_templates', ['is_public'], unique=False, postgresql_where='is_public = true AND deleted_at IS NULL')
    op.create_index('idx_templates_tags', 'session_templates', ['tags'], unique=False, postgresql_using='gin')
    op.create_index('idx_templates_user', 'session_templates', ['user_id'], unique=False, postgresql_where='deleted_at IS NULL')
    op.create_index(op.f('ix_session_templates_created_at'), 'session_templates', ['created_at'], unique=False)
    op.create_index(op.f('ix_session_templates_name'), 'session_templates', ['name'], unique=False)
    op.drop_index(op.f('idx_audit_logs_action'), table_name='audit_logs')
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('idx_audit_logs_created_at'), table_name='audit_logs')
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('idx_audit_logs_session'), table_name='audit_logs')
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('idx_audit_logs_user'), table_name='audit_logs')
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('idx_reports_created_at'), table_name='reports')
    op.create_index('idx_reports_created_at', 'reports', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.create_foreign_key('fk_task_executions_report_id_reports', 'task_executions', 'reports', ['report_id'], ['id'], ondelete='SET NULL', use_alter=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_task_executions_report_id_reports', 'task_executions', type_='foreignkey')
    op.drop_index('idx_reports_created_at', table_name='reports', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_reports_created_at'), 'reports', [sa.literal_column('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_user', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_audit_logs_user'), 'audit_logs', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_session', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_audit_logs_session'), 'audit_logs', ['session_id', sa.literal_column('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_audit_logs_created_at'), 'audit_logs', [sa.literal_column('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_audit_logs_action'), 'audit_logs', ['action_type', sa.literal_column('created_at DESC')], unique=False)
    op.drop_index(op.f('ix_session_templates_name'), table_name='session_templates')
    op.drop_index(op.f('ix_session_templates_created_at'), table_name='session_templates')
    op.drop_index('idx_templates_user', table_name='session_templates', postgresql_where='deleted_at IS NULL')
    op.drop_index('idx_templates_tags', table_name='session_templates', postgresql_using='gin')
    op.drop_index('idx_templates_public', table_name='session_templates', postgresql_where='is_public = true AND deleted_at IS NULL')
    op.drop_index('idx_templates_name', table_name='session_templates', postgresql_ops={'name': 'varchar_pattern_ops'})
    op.drop_index('idx_templates_category', table_name='session_templates', postgresql_where='deleted_at IS NULL')
    op.drop_table('session_templates')
    # ### end Alembic commands ###
