"""phase1_claude_sdk_v2_foundation

Revision ID: c0b7d0e366e7
Revises: 567cc0f251e5
Create Date: 2025-10-19 00:58:59.862984

"""
from alembic import op
import sqlalchemy as sa
from app.database.base import JSONB, ARRAY, INET
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c0b7d0e366e7'
down_revision = '567cc0f251e5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('working_directory_archives',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('archive_path', sa.Text(), nullable=False),
    sa.Column('storage_backend', sa.String(length=50), nullable=False),
    sa.Column('compression_type', sa.String(length=50), nullable=False),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('archive_metadata', JSONB(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("status IN ('pending', 'in_progress', 'completed', 'failed')", name=op.f('ck_working_directory_archives_chk_archive_status')),
    sa.CheckConstraint("storage_backend IN ('s3', 'filesystem')", name=op.f('ck_working_directory_archives_chk_storage_backend')),
    sa.CheckConstraint('size_bytes >= 0', name=op.f('ck_working_directory_archives_chk_size_bytes')),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name=op.f('fk_working_directory_archives_session_id_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_working_directory_archives'))
    )
    op.create_index('idx_archives_backend', 'working_directory_archives', ['storage_backend', 'status'], unique=False)
    op.create_index('idx_archives_status', 'working_directory_archives', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_working_directory_archives_created_at'), 'working_directory_archives', ['created_at'], unique=False)
    op.create_index(op.f('ix_working_directory_archives_session_id'), 'working_directory_archives', ['session_id'], unique=True)
    op.create_index(op.f('ix_working_directory_archives_status'), 'working_directory_archives', ['status'], unique=False)
    op.create_table('session_metrics_snapshots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('snapshot_type', sa.String(length=50), nullable=False),
    sa.Column('total_messages', sa.Integer(), nullable=True),
    sa.Column('total_tool_calls', sa.Integer(), nullable=True),
    sa.Column('total_hook_executions', sa.Integer(), nullable=True),
    sa.Column('total_permission_checks', sa.Integer(), nullable=True),
    sa.Column('total_errors', sa.Integer(), nullable=True),
    sa.Column('total_retries', sa.Integer(), nullable=True),
    sa.Column('api_input_tokens', sa.Integer(), nullable=True),
    sa.Column('api_output_tokens', sa.Integer(), nullable=True),
    sa.Column('api_cache_creation_tokens', sa.Integer(), nullable=True),
    sa.Column('api_cache_read_tokens', sa.Integer(), nullable=True),
    sa.Column('total_cost_usd', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('duration_ms', sa.BigInteger(), nullable=True),
    sa.Column('metrics_data', JSONB(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name=op.f('fk_session_metrics_snapshots_session_id_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_session_metrics_snapshots'))
    )
    op.create_index('idx_metrics_snapshots_session', 'session_metrics_snapshots', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_metrics_snapshots_session_type', 'session_metrics_snapshots', ['session_id', 'snapshot_type', 'created_at'], unique=False)
    op.create_index('idx_metrics_snapshots_type', 'session_metrics_snapshots', ['snapshot_type', 'created_at'], unique=False)
    op.create_index(op.f('ix_session_metrics_snapshots_created_at'), 'session_metrics_snapshots', ['created_at'], unique=False)
    op.create_index(op.f('ix_session_metrics_snapshots_session_id'), 'session_metrics_snapshots', ['session_id'], unique=False)
    op.create_table('hook_executions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('tool_call_id', sa.UUID(), nullable=True),
    sa.Column('hook_name', sa.String(length=100), nullable=False),
    sa.Column('tool_use_id', sa.String(length=255), nullable=False),
    sa.Column('tool_name', sa.String(length=255), nullable=False),
    sa.Column('input_data', JSONB(), nullable=False),
    sa.Column('output_data', JSONB(), nullable=False),
    sa.Column('context_data', JSONB(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name=op.f('fk_hook_executions_session_id_sessions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tool_call_id'], ['tool_calls.id'], name=op.f('fk_hook_executions_tool_call_id_tool_calls'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hook_executions'))
    )
    op.create_index('idx_hook_executions_hook_name', 'hook_executions', ['hook_name', 'created_at'], unique=False)
    op.create_index('idx_hook_executions_input', 'hook_executions', ['input_data'], unique=False, postgresql_using='gin')
    op.create_index('idx_hook_executions_output', 'hook_executions', ['output_data'], unique=False, postgresql_using='gin')
    op.create_index('idx_hook_executions_session', 'hook_executions', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_hook_executions_tool', 'hook_executions', ['tool_use_id', 'hook_name'], unique=False)
    op.create_index(op.f('ix_hook_executions_created_at'), 'hook_executions', ['created_at'], unique=False)
    op.create_index(op.f('ix_hook_executions_hook_name'), 'hook_executions', ['hook_name'], unique=False)
    op.create_index(op.f('ix_hook_executions_session_id'), 'hook_executions', ['session_id'], unique=False)
    op.create_index(op.f('ix_hook_executions_tool_use_id'), 'hook_executions', ['tool_use_id'], unique=False)
    op.create_table('permission_decisions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('tool_call_id', sa.UUID(), nullable=True),
    sa.Column('tool_use_id', sa.String(length=255), nullable=False),
    sa.Column('tool_name', sa.String(length=255), nullable=False),
    sa.Column('input_data', JSONB(), nullable=False),
    sa.Column('context_data', JSONB(), nullable=True),
    sa.Column('decision', sa.String(length=50), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('policy_applied', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("decision IN ('allowed', 'denied', 'bypassed')", name=op.f('ck_permission_decisions_chk_permission_decision')),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name=op.f('fk_permission_decisions_session_id_sessions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tool_call_id'], ['tool_calls.id'], name=op.f('fk_permission_decisions_tool_call_id_tool_calls'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission_decisions'))
    )
    op.create_index('idx_permission_decisions_decision', 'permission_decisions', ['decision', 'created_at'], unique=False)
    op.create_index('idx_permission_decisions_input', 'permission_decisions', ['input_data'], unique=False, postgresql_using='gin')
    op.create_index('idx_permission_decisions_session', 'permission_decisions', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_permission_decisions_tool', 'permission_decisions', ['tool_use_id', 'decision'], unique=False)
    op.create_index('idx_permission_decisions_tool_name', 'permission_decisions', ['tool_name', 'decision'], unique=False)
    op.create_index(op.f('ix_permission_decisions_created_at'), 'permission_decisions', ['created_at'], unique=False)
    op.create_index(op.f('ix_permission_decisions_decision'), 'permission_decisions', ['decision'], unique=False)
    op.create_index(op.f('ix_permission_decisions_session_id'), 'permission_decisions', ['session_id'], unique=False)
    op.create_index(op.f('ix_permission_decisions_tool_name'), 'permission_decisions', ['tool_name'], unique=False)
    op.create_index(op.f('ix_permission_decisions_tool_use_id'), 'permission_decisions', ['tool_use_id'], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_session', table_name='audit_logs')
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_audit_logs_user', table_name='audit_logs')
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', 'created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.add_column('messages', sa.Column('is_partial', sa.Boolean(), nullable=True))
    op.add_column('messages', sa.Column('parent_message_id', sa.UUID(), nullable=True))
    op.add_column('messages', sa.Column('thinking_content', sa.Text(), nullable=True))
    op.create_index(op.f('ix_messages_parent_message_id'), 'messages', ['parent_message_id'], unique=False)
    op.create_foreign_key(op.f('fk_messages_parent_message_id_messages'), 'messages', 'messages', ['parent_message_id'], ['id'])
    op.drop_index('idx_reports_created_at', table_name='reports')
    op.create_index('idx_reports_created_at', 'reports', ['created_at'], unique=False, postgresql_ops={'created_at': 'DESC'})
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=ARRAY(sa.String),
               existing_nullable=True)
    op.add_column('sessions', sa.Column('include_partial_messages', sa.Boolean(), nullable=True))
    op.add_column('sessions', sa.Column('max_retries', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('retry_delay', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('sessions', sa.Column('timeout_seconds', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('hooks_enabled', JSONB(), nullable=True))
    op.add_column('sessions', sa.Column('permission_mode', sa.String(length=50), nullable=True))
    op.add_column('sessions', sa.Column('custom_policies', JSONB(), nullable=True))
    op.add_column('sessions', sa.Column('total_hook_executions', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('total_permission_checks', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('total_errors', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('total_retries', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('archive_id', sa.UUID(), nullable=True))
    op.add_column('sessions', sa.Column('template_id', sa.UUID(), nullable=True))
    op.create_index(op.f('ix_sessions_archive_id'), 'sessions', ['archive_id'], unique=False)
    op.create_index(op.f('ix_sessions_template_id'), 'sessions', ['template_id'], unique=False)
    op.create_foreign_key(op.f('fk_sessions_archive_id_working_directory_archives'), 'sessions', 'working_directory_archives', ['archive_id'], ['id'])
    op.create_foreign_key(op.f('fk_sessions_template_id_session_templates'), 'sessions', 'session_templates', ['template_id'], ['id'])
    op.add_column('tool_calls', sa.Column('retries', sa.Integer(), nullable=True))
    op.add_column('tool_calls', sa.Column('hook_pre_data', JSONB(), nullable=True))
    op.add_column('tool_calls', sa.Column('hook_post_data', JSONB(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tool_calls', 'hook_post_data')
    op.drop_column('tool_calls', 'hook_pre_data')
    op.drop_column('tool_calls', 'retries')
    op.drop_constraint(op.f('fk_sessions_template_id_session_templates'), 'sessions', type_='foreignkey')
    op.drop_constraint(op.f('fk_sessions_archive_id_working_directory_archives'), 'sessions', type_='foreignkey')
    op.drop_index(op.f('ix_sessions_template_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_archive_id'), table_name='sessions')
    op.drop_column('sessions', 'template_id')
    op.drop_column('sessions', 'archive_id')
    op.drop_column('sessions', 'total_retries')
    op.drop_column('sessions', 'total_errors')
    op.drop_column('sessions', 'total_permission_checks')
    op.drop_column('sessions', 'total_hook_executions')
    op.drop_column('sessions', 'custom_policies')
    op.drop_column('sessions', 'permission_mode')
    op.drop_column('sessions', 'hooks_enabled')
    op.drop_column('sessions', 'timeout_seconds')
    op.drop_column('sessions', 'retry_delay')
    op.drop_column('sessions', 'max_retries')
    op.drop_column('sessions', 'include_partial_messages')
    op.alter_column('session_templates', 'mcp_server_ids',
               existing_type=ARRAY(sa.String),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
    op.drop_index('idx_reports_created_at', table_name='reports', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_reports_created_at', 'reports', [sa.text('created_at DESC')], unique=False)
    op.drop_constraint(op.f('fk_messages_parent_message_id_messages'), 'messages', type_='foreignkey')
    op.drop_index(op.f('ix_messages_parent_message_id'), table_name='messages')
    op.drop_column('messages', 'thinking_content')
    op.drop_column('messages', 'parent_message_id')
    op.drop_column('messages', 'is_partial')
    op.drop_index('idx_audit_logs_user', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_session', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_session', 'audit_logs', ['session_id', sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_created_at', 'audit_logs', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_audit_logs_action', table_name='audit_logs', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action_type', sa.text('created_at DESC')], unique=False)
    op.drop_index(op.f('ix_permission_decisions_tool_use_id'), table_name='permission_decisions')
    op.drop_index(op.f('ix_permission_decisions_tool_name'), table_name='permission_decisions')
    op.drop_index(op.f('ix_permission_decisions_session_id'), table_name='permission_decisions')
    op.drop_index(op.f('ix_permission_decisions_decision'), table_name='permission_decisions')
    op.drop_index(op.f('ix_permission_decisions_created_at'), table_name='permission_decisions')
    op.drop_index('idx_permission_decisions_tool_name', table_name='permission_decisions')
    op.drop_index('idx_permission_decisions_tool', table_name='permission_decisions')
    op.drop_index('idx_permission_decisions_session', table_name='permission_decisions')
    op.drop_index('idx_permission_decisions_input', table_name='permission_decisions', postgresql_using='gin')
    op.drop_index('idx_permission_decisions_decision', table_name='permission_decisions')
    op.drop_table('permission_decisions')
    op.drop_index(op.f('ix_hook_executions_tool_use_id'), table_name='hook_executions')
    op.drop_index(op.f('ix_hook_executions_session_id'), table_name='hook_executions')
    op.drop_index(op.f('ix_hook_executions_hook_name'), table_name='hook_executions')
    op.drop_index(op.f('ix_hook_executions_created_at'), table_name='hook_executions')
    op.drop_index('idx_hook_executions_tool', table_name='hook_executions')
    op.drop_index('idx_hook_executions_session', table_name='hook_executions')
    op.drop_index('idx_hook_executions_output', table_name='hook_executions', postgresql_using='gin')
    op.drop_index('idx_hook_executions_input', table_name='hook_executions', postgresql_using='gin')
    op.drop_index('idx_hook_executions_hook_name', table_name='hook_executions')
    op.drop_table('hook_executions')
    op.drop_index(op.f('ix_session_metrics_snapshots_session_id'), table_name='session_metrics_snapshots')
    op.drop_index(op.f('ix_session_metrics_snapshots_created_at'), table_name='session_metrics_snapshots')
    op.drop_index('idx_metrics_snapshots_type', table_name='session_metrics_snapshots')
    op.drop_index('idx_metrics_snapshots_session_type', table_name='session_metrics_snapshots')
    op.drop_index('idx_metrics_snapshots_session', table_name='session_metrics_snapshots')
    op.drop_table('session_metrics_snapshots')
    op.drop_index(op.f('ix_working_directory_archives_status'), table_name='working_directory_archives')
    op.drop_index(op.f('ix_working_directory_archives_session_id'), table_name='working_directory_archives')
    op.drop_index(op.f('ix_working_directory_archives_created_at'), table_name='working_directory_archives')
    op.drop_index('idx_archives_status', table_name='working_directory_archives')
    op.drop_index('idx_archives_backend', table_name='working_directory_archives')
    op.drop_table('working_directory_archives')
    # ### end Alembic commands ###
